name: "interop-public-catalog-strapi"

serviceAccount:
  roleArn: "arn:aws:iam::{{.Values.local.awsAccountId}}:role/interop-public-catalog-strapi-dev"

service:
  create: true
  portName: http
  containerPort: 1337

configmap:
  DATABASE_CLIENT: "postgres"
  DATABASE_SSL_REJECT_UNAUTHORIZED: "false"
  CDN_URL: "api-gov.dev.interop.pagopa.it"
  CDN_ROOT_PATH: "/cms-assets/"
  AWS_REGION: "eu-south-1"
  AWS_BUCKET: "interop-public-catalog-cms-assets-dev-es1"
  CDN_ID: "E2V4OXZKWZ5U4B"
  CDN_INVALIDATION_PATH: "/cms-assets/*"
  GH_WORKFLOW_OWNER: "pagopa"
  GH_WORKFLOW_REPO: "interop-public-catalog-deployment"
  GH_WORKFLOW_ID: "invalidate-cache.yaml"

deployment:
  flywayInitContainer:
    create: true
    version: "11.4.0"
    downloadRedshiftDriver: false
    migrationsConfigmap: "flyway-strapi"
    env:
      FLYWAY_CREATE_SCHEMAS: true
      FLYWAY_PLACEHOLDER_REPLACEMENT: true
      FLYWAY_PLACEHOLDERS_NAMESPACE: "dev"
      FLYWAY_URL: jdbc:postgresql://$(DB_HOST):$(DB_PORT)/$(DB_NAME)
      FLYWAY_SCHEMAS: "dev_strapi"
    envFromConfigmaps:
      DB_HOST: "common-public-catalog-data.DB_HOST"
      DB_PORT: "common-public-catalog-data.DB_PORT"
      DB_NAME: "common-public-catalog-data.DB_NAME_STRAPI"
    envFromSecrets:
      FLYWAY_USER: "public-catalog-data-flyway-user.username"
      FLYWAY_PASSWORD: "public-catalog-data-flyway-user.password"

  env:
    HOST: "0.0.0.0"
    PORT: "1337"
  envFromConfigmaps:
    DATABASE_HOST: "common-public-catalog-data.DB_HOST"
    DATABASE_PORT: "common-public-catalog-data.DB_PORT"
    DATABASE_NAME: "common-public-catalog-data.DB_NAME_STRAPI"
    DATABASE_SSL: "common-public-catalog-data.DB_USE_SSL"
    DATABASE_SCHEMA: "common-public-catalog-data.DB_SCHEMA_STRAPI"
  envFromSecrets:
    DATABASE_USERNAME: "public-catalog-data-strapi-user.username"
    DATABASE_PASSWORD: "public-catalog-data-strapi-user.password"
    APP_KEYS: "public-catalog-strapi-app-keys.value"
    API_TOKEN_SALT: "public-catalog-strapi-api-token-salt.value"
    ADMIN_JWT_SECRET: "public-catalog-strapi-admin-jwt-key.value"
    JWT_SECRET: "public-catalog-strapi-standard-users-jwt-key.value"
    ENCRYPTION_KEY: "public-catalog-strapi-encryption-key.value"
    GH_WORKFLOW_TOKEN: "public-catalog-strapi-gh-workflow-token.value"
    STRAPI_ADMIN_USERNAME: "public-catalog-strapi-admin-user.username"
    STRAPI_ADMIN_PASSWORD: "public-catalog-strapi-admin-user.password"
    STRAPI_ADMIN_FIRSTNAME: "public-catalog-strapi-admin-user.firstname"
    STRAPI_ADMIN_LASTNAME: "public-catalog-strapi-admin-user.lastname"
    STRAPI_ADMIN_EMAIL: "public-catalog-strapi-admin-user.email"

  postStartHook:
    create: true
    command:
      - /bin/sh
      - -c
      - |
        echo "Waiting for Strapi to be ready..."
        timeout 300 sh -c '
          until wget -q --spider http://interop-public-catalog-strapi:1337/admin/init; do
            echo "Strapi is not ready yet..."
            sleep 2
          done
        '
        echo "Strapi is ready!"
        echo "Registering admin if not exists..."

        http_code=$(wget -q --server-response --method=POST --header="Content-Type: application/json" --body-data="{
          \"username\": \"${STRAPI_ADMIN_USERNAME}\",
          \"password\": \"${STRAPI_ADMIN_PASSWORD}\",
          \"firstname\": \"${STRAPI_ADMIN_FIRSTNAME}\",
          \"lastname\": \"${STRAPI_ADMIN_LASTNAME}\",
          \"email\": \"${STRAPI_ADMIN_EMAIL}\",
          \"blocked\": false,
          \"isActive\": true
        }" -O /tmp/strapi-admin-registration-response.json http://interop-public-catalog-strapi:1337/admin/auth/local/register 2>&1 | awk "/HTTP\// {print \$2}" | tail -1)

        if [ "$http_code" = "200" ]; then
          echo "Admin registered successfully!"
        else
          echo "Admin registration failed."
          echo "Response code: $http_code. Response body:"
          cat /tmp/strapi-admin-registration-response.json
        fi
